{
    "name": "aiida-kkr",
    "author": "Philipp Ruessmann, Jens Broeder",
    "author_email": "p.ruessmann@fz-juelich.de",
    "description": "AiiDA plugin for the KKR code",
    "url": "https://github.com/broeder-j/aiida-kkr",
    "license": "MIT",
    "classifiers": [
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 2.7",
        "Development Status :: 4 - Beta",
        "Environment :: Plugins",
        "Intended Audience :: Science/Research",
        "Topic :: Scientific/Engineering :: Physics",
        "Natural Language :: English"      
    ],
    "version": "1.0.0",
    "setup_requires": ["reentry"],
    "reentry_register": true,
    "install_requires": [
        "aiida-core >= 1.0.0a4",
        "pgtest",
        "pytest-cov >= 2.5.0",
        "masci-tools",
        "sphinx",
        "sphinx_rtd_theme"
    ],
    "entry_points": {
        "aiida.calculations": [
            "kkr.kkr = aiida_kkr.calculations.kkr:KkrCalculation",
            "kkr.kkrimporter = aiida_kkr.calculations.kkrimporter:KkrImporterCalculation",
            "kkr.voro = aiida_kkr.calculations.voro:VoronoiCalculation",
            "kkr.kkrimp = aiida_kkr.calculations.kkrimp:KkrimpCalculation"
            ],
        "aiida.parsers": [
            "kkr.voroparser = aiida_kkr.parsers.voro:VoronoiParser",
            "kkr.kkrparser = aiida_kkr.parsers.kkr:KkrParser",
            "kkr.kkrimporterparser = aiida_kkr.parsers.kkrimporter:KkrImporterParser",
            "kkr.kkrimpparser = aiida_kkr.parsers.kkrimp:KkrimpParser"
            ],
        "aiida.data": [
            "kkr.kkrstructure = aiida_kkr.data.kkrstructure:KkrstructureData"
            ],
        "aiida.workflows":[
            "kkr.scf = aiida_kkr.workflows.kkr_scf:kkr_scf_wc",
            "kkr.dos = aiida_kkr.workflows.dos:kkr_dos_wc",
            "kkr.eos = aiida_kkr.workflows.eos:kkr_eos_wc",
            "kkr.startpot = aiida_kkr.workflows.voro_start:kkr_startpot_wc",
            "kkr.check_mag = aiida_kkr.workflows.check_magnetic_state:kkr_check_mag_wc",
            "kkr.convergence_check = aiida_kkr.workflows.check_para_convergence:kkr_check_para_wc",
            "kkr.gf_writeout = aiida_kkr.workflows.gf_writeout:kkr_flex_wc",
            "kkr.imp_sub = aiida_kkr.workflows.kkr_imp_sub:kkr_imp_sub_wc",
	    "kkr.imp = aiida_kkr.workflows.kkr_imp:kkr_imp_wc"
	    ],
        "console_scripts": [
            "kkrstructure = aiida_kkr.cmdline.data_cli:cli"
            ]
    }
}
